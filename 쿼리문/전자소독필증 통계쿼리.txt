****전자소독필증 10일간 발급 건수**** 
SELECT
	D.DT,
	NVL(A.issu_CNT, 0) AS issu_CNT,
	NVL(B.ISSU_REJECT_CNT, 0) AS ISSU_REJECT_CNT
FROM
	( WITH WD AS (
	SELECT
		TO_DATE('20210820', 'YYYY-MM-DD') AS FROM_DT,
		TO_DATE('20210830', 'YYYY-MM-DD') AS TO_DT
	FROM
		DUAL )
	SELECT
		DT
	FROM
		(
		SELECT
			TO_CHAR(FROM_DT + (LEVEL-1), 'YYYY-MM-DD') AS DT
		FROM
			WD
		CONNECT BY
			LEVEL <= (TO_DT - FROM_DT) + 1 ) ) D
LEFT JOIN (
	SELECT
		TO_CHAR(issu_dt, 'yyyy-mm-dd') AS issu_dt ,
		COUNT(*) AS issu_CNT
	FROM
		dis.elctrn_dsnf_cerfin
	WHERE
		issu_dt >= TO_DATE('20210820', 'yyyy-mm-dd')
		AND issu_dt <= TO_DATE('20210830', 'yyyy-mm-dd')
		AND issu_dt IS NOT NULL
	GROUP BY
		TO_CHAR(issu_dt, 'yyyy-mm-dd') ) A ON
	D.DT = A.issu_dt
LEFT JOIN (
	SELECT
		TO_CHAR(regist_dt, 'yyyy-mm-dd') AS ISSU_REJECT_DT,
		count(*) AS ISSU_REJECT_CNT
	FROM
		dis.elctrn_dsnf_cerfin
	WHERE
		regist_dt >= TO_DATE('20210820', 'yyyy-mm-dd')
			AND regist_dt <= TO_DATE('20210830', 'yyyy-mm-dd')
				AND status = 'ISSU_REJECT'
			GROUP BY
				TO_CHAR(regist_dt, 'yyyy-mm-dd') ) B ON
	D.DT = B.ISSU_REJECT_DT
ORDER BY
	D.DT;
	

****농장방문차량 10일간 방문 건수 ****
 SELECT
	D.DT,
	NVL(A.withEdc_CNT, 0) AS withEdc,
	NVL(B.WithoutEdc_CNT, 0) AS withoutEdc
FROM
	( WITH WD AS (
	SELECT
		TO_DATE('20210820', 'YYYY-MM-DD') AS FROM_DT,
		TO_DATE('20210830', 'YYYY-MM-DD') AS TO_DT
	FROM
		DUAL )
	SELECT
		DT
	FROM
		(
		SELECT
			TO_CHAR(FROM_DT + (LEVEL-1), 'YYYY-MM-DD') AS DT
		FROM
			WD
		CONNECT BY
			LEVEL <= (TO_DT - FROM_DT) + 1 ) ) D
LEFT JOIN (
	SELECT
		TO_CHAR(REGIST_DT, 'yyyy-mm-dd') AS withEdc_DT ,
		COUNT(*) AS withEdc_CNT
	FROM
		dis.visit_history
	WHERE
		REGIST_DT >= TO_DATE('20210820', 'yyyy-mm-dd')
		AND REGIST_DT <= TO_DATE('20210830', 'yyyy-mm-dd')
		AND REGIST_DT IS NOT NULL
		AND WITHOUT_EDC = 0
		AND VISIT_CONFM_AT = 1
	GROUP BY
		TO_CHAR(REGIST_DT, 'yyyy-mm-dd') ) A ON
	D.DT = A.withEdc_DT
LEFT JOIN (
	SELECT
		TO_CHAR(REGIST_DT, 'yyyy-mm-dd') AS WithoutEdc_DT,
		count(*) AS WithoutEdc_CNT
	FROM
		dis.visit_history
	WHERE
		REGIST_DT >= TO_DATE('20210820', 'yyyy-mm-dd')
			AND REGIST_DT <= TO_DATE('20210830', 'yyyy-mm-dd')
				AND REGIST_DT IS NOT NULL
				AND 
WITHOUT_EDC = 1
				AND VISIT_CONFM_AT = 1
			GROUP BY
				TO_CHAR(REGIST_DT, 'yyyy-mm-dd') ) B ON
	D.DT = B.WithoutEdc_DT
ORDER BY
	D.DT;
	
	
****미소독 방문 비율 ****
select (
SELECT
	count(*) AS cnt
FROM
	dis.visit_history
WHERE
	WITHOUT_EDC = 1
	AND REGIST_DT BETWEEN TO_DATE('20210830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
	AND VISIT_CONFM_AT = 1 ) AS WITHOUT_EDC,
(
SELECT
	count(*) AS cnt
FROM
	dis.visit_history
WHERE
	WITHOUT_EDC = 0
	AND REGIST_DT BETWEEN TO_DATE('20210830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		AND VISIT_CONFM_AT = 1 ) AS WITH_EDC
FROM
DUAL;





****시설별 발급 건수****
SELECT
	D.DT,
	NVL(A.issu_CNT, 0) AS dsnf_cnt,
	NVL(B.farm_cnt, 0) AS farm_cnt
FROM
	( WITH WD AS (
	SELECT
		TO_DATE('202008', 'YYYY-MM') AS FROM_DT ,
		TO_DATE('202108', 'YYYY-MM') AS TO_DT
	FROM
		DUAL )
	SELECT
		DT
	FROM
		(
		SELECT
			TO_CHAR(ADD_MONTHS(FROM_DT , (LEVEL-1)), 'YYYY-MM') AS DT
		FROM
			WD
		CONNECT BY
			LEVEL <= MONTHS_BETWEEN(TO_DT , FROM_DT)+ 1 ) ) D
LEFT JOIN (
	SELECT
		TO_CHAR(issu_dt, 'yyyy-mm') AS issu_dt ,
		COUNT(*) AS issu_CNT
	FROM
		dis.elctrn_dsnf_cerfin
	WHERE
		issu_dt >= TO_DATE('202008', 'yyyy-mm')
		AND issu_dt <= TO_DATE('202108', 'yyyy-mm')
		AND issu_dt IS NOT NULL
		AND ISSU_DSNF_FCLTY_ID IS NOT NULL
	GROUP BY
		TO_CHAR(issu_dt, 'yyyy-mm') ) A ON
	D.DT = A.issu_dt
LEFT JOIN (
	SELECT
		TO_CHAR(issu_dt, 'yyyy-mm') AS ISSU_FARM_DT,
		count(*) AS farm_cnt
	FROM
		dis.elctrn_dsnf_cerfin
	WHERE
		issu_dt >= TO_DATE('202008', 'yyyy-mm')
			AND issu_dt <= TO_DATE('202108', 'yyyy-mm')
				AND issu_dt IS NOT NULL
				AND ISSU_FARM_NO IS NOT NULL
			GROUP BY
				TO_CHAR(issu_dt, 'yyyy-mm') ) B ON
	D.DT = B.ISSU_FARM_DT
ORDER BY
	D.DT;
	
	
****지역별 발급 건수 ****

SELECT
	AREA,
	SUM(ISSU_DSNF_FCLTY) AS ISSU_DSNF_FCLTY,
	SUM(ISSU_FARM_NO) AS ISSU_FARM_NO,
	SUM(ISSU_DT) AS ISSU_DT
FROM
	(
	SELECT
		'SU' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'GG' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'IC' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'BS' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'DG' 
AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'GJ' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'DJ' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'US' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'SJ' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'GW' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'GN' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'GB' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'JN' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'JNBK' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'CHN' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'CB' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL
	SELECT
		'JJ' AS AREA,
		0 AS ISSU_DSNF_FCLTY,
		0 AS ISSU_FARM_NO,
		0 AS ISSU_DT
	FROM
		dual
UNION ALL (
	SELECT
		A.AREA,
		ISSU_DSNF_FCLTY,
		ISSU_FARM_NO,
		ISSU_DT
	FROM
		(
		SELECT
			AREA,
			COUNT(ISSU_DSNF_FCLTY) AS ISSU_DSNF_FCLTY
		FROM
			dis.ELCTRN_DSNF_CERFIN edc
		WHERE
			ISSU_DT BETWEEN TO_DATE('20200830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		GROUP BY
			edc.AREA) A
	LEFT JOIN (
		SELECT
			AREA,
			COUNT(ISSU_FARM_NO) AS ISSU_FARM_NO
		FROM
			dis.ELCTRN_DSNF_CERFIN edc
		WHERE
			ISSU_DT BETWEEN TO_DATE('20200830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		GROUP BY
			edc.AREA) B ON
		A.AREA = B.AREA
	LEFT JOIN (
		SELECT
			AREA,
			COUNT(ISSU_DT) AS ISSU_DT
		FROM
			dis.ELCTRN_DSNF_CERFIN edc
		WHERE
			ISSU_DT BETWEEN TO_DATE('20200830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		GROUP BY
			edc.AREA) C ON
		C.AREA = B.AREA) ) TOTAL
GROUP BY
	AREA;
	
****사용자 가입 건수 ****
WITH WD AS (
SELECT
	TO_DATE('20200830', 'YYYY-MM-DD') AS FROM_DT ,
	TO_DATE('20210830', 'YYYY-MM-DD') AS TO_DT
FROM
	DUAL ) ,
dates AS (
SELECT
	DT,
	DT2
FROM
	(
	SELECT
		TO_CHAR(ADD_MONTHS(FROM_DT , (LEVEL-1)), 'YYYYMM') AS DT2 ,
		TO_CHAR(ADD_MONTHS(FROM_DT , (LEVEL-1)), 'YYYY-MM') AS DT
	FROM
		WD
	CONNECT BY
		LEVEL <= MONTHS_BETWEEN(TO_DT , FROM_DT)+ 1 ) ) ,
edc AS (
SELECT
	NVL(SUM(CAR), 0) AS CAR,
	NVL(SUM(DIS), 0) AS dis,
	NVL(SUM(FCLTY), 0) AS FCLTY,
	CREATE_AT
FROM
	(
	SELECT
		NVL(SUM(CAR), 0) AS CAR,
		0 AS dis,
		NVL(SUM(FCLTY), 0) AS FCLTY,
		CREATE_AT
	FROM
		(
		SELECT
			CASE
				WHEN pbud.ACCOUNT_TY = 'STKRS_FCLTY_CHARGER' THEN COUNT(pbud.ACCOUNT_TY)
			END AS fclty,
			CASE
				WHEN pbud.ACCOUNT_TY = 'STKRS_VHCLE_DRVER' THEN COUNT(pbud.ACCOUNT_TY)
			END AS car,
			TO_CHAR(pbu2.CREATED_AT, 'YYYY-MM') AS create_at
		FROM
			dis.ACCOUNT_DETAIL pbud,
			DFMD_ACCOUNTS pbu2
		WHERE
			pbud.ACCOUNT_ID = pbu2.ACCOUNT_ID
			AND pbu2.CREATED_AT IS NOT NULL
			AND (pbud.ACCOUNT_TY = 'STKRS_FCLTY_CHARGER'
				OR pbud.ACCOUNT_TY = 'STKRS_VHCLE_DRVER')
			AND pbu2.CREATED_AT BETWEEN TO_DATE('20200830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		GROUP BY
			TO_CHAR(pbu2.CREATED_AT, 'YYYY-MM'),
			pbud.ACCOUNT_TY ) A
	GROUP BY
		CREATE_AT
UNION ALL
	SELECT
		0 AS CAR,
		COUNT(*) AS DIS,
		0 AS fclty,
		TO_CHAR(a2.CREATED_AT, 'YYYY-MM') AS create_at
	FROM
		dis.ACCOUNT_DETAIL ad,
		DFMD_ACCOUNTS a2
	WHERE
		ad.ACCOUNT_ID = a2.ACCOUNT_ID
		AND a2.CREATED_AT IS NOT NULL
		AND ad.ACCOUNT_TY = 'POSITN_DSNF_FCLTY_MNGR'
		AND a2.CREATED_AT BETWEEN TO_DATE('20200830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
	GROUP BY
		TO_CHAR(a2.CREATED_AT, 'YYYY-MM') ) T
GROUP BY
	T.CREATE_AT )
SELECT
	dates.dt AS DT,
	NVL(edc.CAR, 0) AS CAR,
	NVL(edc.DIS, 0) AS DIS,
	NVL(edc.FCLTY, 0) AS FCLTY
FROM
	dates
LEFT OUTER JOIN edc ON
	dates.dt = edc.create_at
ORDER BY
	dt;
	
****사용자 실 사용 현황 ****
WITH WD AS (
SELECT
	TO_DATE('20200830', 'YYYY-MM-DD') AS FROM_DT ,
	TO_DATE('20210830', 'YYYY-MM-DD') AS TO_DT
FROM
	DUAL ) ,
dates AS (
SELECT
	DT,
	DT2
FROM
	(
	SELECT
		TO_CHAR(ADD_MONTHS(FROM_DT , (LEVEL-1)), 'YYYYMM') AS DT2 ,
		TO_CHAR(ADD_MONTHS(FROM_DT , (LEVEL-1)), 'YYYY-MM') AS DT
	FROM
		WD
	CONNECT BY
		LEVEL <= MONTHS_BETWEEN(TO_DT , FROM_DT)+ 1 ) )
SELECT
	dates.DT,
	NVL(A.CREATE_CNT, 0) AS CREATE_CNT,
	NVL(B.LOGIN_CNT, 0) AS LOGIN_CNT
FROM
	dates
LEFT JOIN (
	SELECT
		TO_CHAR(CREATED_AT, 'YYYY-MM') AS CREATE_DT ,
		COUNT(*) AS CREATE_CNT
	FROM
		DFMD_ACCOUNTS
	WHERE
		CREATED_AT BETWEEN TO_DATE('20200830', 'yyyy-mm-dd') AND TO_DATE('20210830', 'yyyy-mm-dd')
	GROUP BY
		TO_CHAR(CREATED_AT, 'YYYY-MM') ) A ON
	dates.DT = A.CREATE_DT
LEFT JOIN (
	SELECT
		TO_CHAR(LOGIN_DT, 'YYYY-MM') AS LOGIN_DT,
		count(DISTINCT LOGIN_ID) AS LOGIN_CNT
	FROM
		DIS.LOGIN_LOG
	WHERE
		LOGIN_DT BETWEEN TO_DATE('20200830', 'yyyy-mm-dd') AND TO_DATE('20210830', 'yyyy-mm-dd')
	GROUP BY
		TO_CHAR(LOGIN_DT, 'YYYY-MM') ) B ON
	dates.DT = B.LOGIN_DT
ORDER BY
	dates.DT;
	
****누적 가입자 실사용 현황 ****
SELECT
	'cnt' AS cnt,
	total.total,
	actual.actual,
	total.total - actual.actual AS unused
FROM
	(
	SELECT
		'cnt' AS cnt,
		count(*) AS total
	FROM
		DFMD_ACCOUNTS
	WHERE
		CREATED_AT BETWEEN TO_DATE('20160830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD')
		AND GROUP_CODE IN ('GRO0012', 'GRO0013') ) total
LEFT JOIN (
	SELECT
		'cnt' AS cnt,
		count(DISTINCT LOGIN_ID) AS actual
	FROM
		dis.LOGIN_LOG
	WHERE
		LOGIN_DT BETWEEN TO_DATE('20160830', 'YYYY-MM-DD') AND TO_DATE('20210830', 'YYYY-MM-DD') ) actual ON
	total.cnt = actual.cnt
ORDER BY
	cnt;